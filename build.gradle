plugins {
	id 'fabric-loom' version '1.11-SNAPSHOT'
	id 'maven-publish'
}
loom {
	accessWidenerPath = file("src/main/resources/hudder.accesswidener")
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
        name = "TerraformersMC"
        url = uri("https://maven.terraformersmc.com/releases/")

        content {
            includeGroup("com.terraformersmc")
        }
    }
}
configurations {
   provided
   implementation.extendsFrom(provided)
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	//mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	
	provided 'org.mozilla:rhino:1.8.0'
	
    modCompileOnly("com.terraformersmc:modmenu:15.0.0-beta.3")
}



configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.apache.logging.log4j'
				&& details.requested.name  == 'log4j-core'
				&& details.requested.version == '2.8.1') {
			// disable 2.8.1
			details.useVersion('2.24.1')
			details.because('2.8.1 insecure (like me frfr)')
		}
		if (requested.group == "com.fasterxml.jackson.core"
				&& requested.name  == "jackson-core"
				&& requested.version == "2.13.4") {
			useVersion("2.15.0")
			because("Because github keeps screaming at me for it")
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
	filesMatching("tutorial") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
	from {configurations.provided.collect { it.isDirectory() ? it : zipTree(it) }}
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
	dependencies {
		
	}
}